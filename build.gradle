plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.7.20"
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jlleitschuh.gradle.ktlint' version "11.0.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

project.ext {
    kotlinVersion = '1.7.20'
    coroutinesVersion = '1.6.4'
    dropwizardVersion = '2.1.3'
    guiceVersion = '5.1.0'
    dropwizardGuiceyVersion = '5.6.1'
    junitVersion = '5.9.1'
    restAssuredVersion = '5.2.0'
    assertKVersion = '0.25'
    mockKVersion = '1.13.2'
    wiremockVersion = '2.35.0'
}

dependencies {
    // Runtime dependencies
    implementation "io.dropwizard:dropwizard-core:$dropwizardVersion"
    implementation "io.dropwizard:dropwizard-client:$dropwizardVersion"
    implementation "com.google.inject:guice:$guiceVersion"
    implementation "ru.vyarus:dropwizard-guicey:$dropwizardGuiceyVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // Test dependencies
    testImplementation "io.rest-assured:rest-assured:$restAssuredVersion"
    testImplementation "io.rest-assured:kotlin-extensions:$restAssuredVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testImplementation "com.github.tomakehurst:wiremock-jre8:$wiremockVersion"
    testImplementation "com.willowtreeapps.assertk:assertk-jvm:$assertKVersion"
    testImplementation "io.mockk:mockk:$mockKVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
}

shadowJar {
    zip64 true
    mergeServiceFiles()
    archivesBaseName = "microservice"
}

mainClassName = 'MainKt'
run {
    args 'server', 'dev.yml'
}

sourceSets {
    integration {
        kotlin {
            srcDir 'src/integration/kotlin'
        }
        resources {
            srcDir 'src/integration/resource'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
        compileClasspath += sourceSets.test.runtimeClasspath
    }
}

task integrationTest(type: Test) {
    description = "Runs Integration Tests"
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath += sourceSets.integration.runtimeClasspath
    useJUnitPlatform()
}